{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useAuthContext } from './useAuthContext';\nimport { useHistory } from 'react-router-dom';\nexport const useRegister = () => {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const {\n    dispatch\n  } = useAuthContext();\n  const history = useHistory();\n\n  const register = async (email, password, firstName, lastName) => {\n    setIsLoading(true);\n    setError(null);\n    const response = await fetch('/api/user/inscription', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password,\n        firstName,\n        lastName\n      })\n    });\n    const json = await response.json();\n\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.error);\n    }\n\n    if (response.ok) {\n      //save the user to localStorage\n      localStorage.setItem('user', JSON.stringify(json)); //update the auth context\n\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n      setIsLoading(false);\n      history.push(\"/\");\n    }\n  };\n\n  return {\n    register,\n    isLoading,\n    error\n  };\n};\n\n_s(useRegister, \"khtrduw75q1dnLxiKCCSp5oxN7Y=\", false, function () {\n  return [useAuthContext, useHistory];\n});","map":{"version":3,"sources":["D:/amazon/client/src/hooks/useRegister.js"],"names":["useState","useAuthContext","useHistory","useRegister","error","setError","isLoading","setIsLoading","dispatch","history","register","email","password","firstName","lastName","response","fetch","method","headers","body","JSON","stringify","json","ok","localStorage","setItem","type","payload","push"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,UAAT,QAA0B,kBAA1B;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAC7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAeP,cAAc,EAAnC;AACA,QAAMQ,OAAO,GAAGP,UAAU,EAA1B;;AAEA,QAAMQ,QAAQ,GAAG,OAAOC,KAAP,EAAcC,QAAd,EAAwBC,SAAxB,EAAmCC,QAAnC,KAAgD;AAC7DP,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAF,IAAAA,QAAQ,CAAC,IAAD,CAAR;AAEA,UAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC,uBAAD,EAA0B;AAClDC,MAAAA,MAAM,EAAE,MAD0C;AAElDC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OAFyC;AAGlDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACV,QAAAA,KAAD;AAAQC,QAAAA,QAAR;AAAkBC,QAAAA,SAAlB;AAA6BC,QAAAA;AAA7B,OAAf;AAH4C,KAA1B,CAA5B;AAMA,UAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAT,EAAnB;;AAEA,QAAI,CAACP,QAAQ,CAACQ,EAAd,EAAkB;AACdhB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,MAAAA,QAAQ,CAACiB,IAAI,CAAClB,KAAN,CAAR;AACH;;AAED,QAAIW,QAAQ,CAACQ,EAAb,EAAiB;AACb;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BL,IAAI,CAACC,SAAL,CAAeC,IAAf,CAA7B,EAFa,CAIb;;AAEAd,MAAAA,QAAQ,CAAC;AAACkB,QAAAA,IAAI,EAAE,OAAP;AAAgBC,QAAAA,OAAO,EAAEL;AAAzB,OAAD,CAAR;AAEAf,MAAAA,YAAY,CAAC,KAAD,CAAZ;AAEAE,MAAAA,OAAO,CAACmB,IAAR,CAAa,GAAb;AACH;AACJ,GA7BD;;AA8BA,SAAO;AAAElB,IAAAA,QAAF;AAAYJ,IAAAA,SAAZ;AAAuBF,IAAAA;AAAvB,GAAP;AACH,CArCM;;GAAMD,W;UAGYF,c,EACLC,U","sourcesContent":["import { useState } from 'react';\r\nimport { useAuthContext } from './useAuthContext';\r\nimport { useHistory} from 'react-router-dom'\r\n\r\nexport const useRegister = () => {\r\n    const [error, setError] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(null);\r\n    const { dispatch } = useAuthContext();\r\n    const history = useHistory();\r\n\r\n    const register = async (email, password, firstName, lastName) => {\r\n        setIsLoading(true)\r\n        setError(null);\r\n\r\n        const response = await fetch('/api/user/inscription', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({email, password, firstName, lastName})\r\n        })\r\n\r\n        const json = await response.json()\r\n\r\n        if (!response.ok) {\r\n            setIsLoading(false)\r\n            setError(json.error)\r\n        }\r\n\r\n        if (response.ok) {\r\n            //save the user to localStorage\r\n            localStorage.setItem('user', JSON.stringify(json))\r\n\r\n            //update the auth context\r\n\r\n            dispatch({type: 'LOGIN', payload: json})\r\n\r\n            setIsLoading(false)\r\n             \r\n            history.push(\"/\")\r\n        }\r\n    }\r\n    return { register, isLoading, error }\r\n}"]},"metadata":{},"sourceType":"module"}