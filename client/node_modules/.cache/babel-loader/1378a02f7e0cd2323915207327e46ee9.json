{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useAuthContext } from './useAuthContext';\nimport { useHistory } from 'react-router-dom';\nexport const useLogin = () => {\n  _s();\n\n  const history = useHistory();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const {\n    dispatch\n  } = useAuthContext();\n\n  const login = async (email, password) => {\n    setIsLoading(true);\n    setError(null);\n    const response = await fetch('/api/user/connexion', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const json = await response.json();\n\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.error);\n    }\n\n    if (response.ok) {\n      //save the user to localStorage\n      localStorage.setItem('user', JSON.stringify(json)); //update the auth context\n\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n      setIsLoading(false);\n      history.push('/');\n    }\n  };\n\n  return {\n    login,\n    isLoading,\n    error\n  };\n};\n\n_s(useLogin, \"n3BPn4DSf/w+Fh7Bdm7VmJKu8c8=\", false, function () {\n  return [useHistory, useAuthContext];\n});","map":{"version":3,"sources":["D:/amazon/client/src/hooks/useLogin.js"],"names":["useState","useAuthContext","useHistory","useLogin","history","error","setError","isLoading","setIsLoading","dispatch","login","email","password","response","fetch","method","headers","body","JSON","stringify","json","ok","localStorage","setItem","type","payload","push"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,UAAT,QAA0B,kBAA1B;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC1B,QAAMC,OAAO,GAAGF,UAAU,EAA1B;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM;AAAES,IAAAA;AAAF,MAAeR,cAAc,EAAnC;;AAEA,QAAMS,KAAK,GAAG,OAAOC,KAAP,EAAcC,QAAd,KAA2B;AACrCJ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAF,IAAAA,QAAQ,CAAC,IAAD,CAAR;AAEA,UAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,qBAAD,EAAwB;AAChDC,MAAAA,MAAM,EAAE,MADwC;AAEhDC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OAFuC;AAGhDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACR,QAAAA,KAAD;AAAQC,QAAAA;AAAR,OAAf;AAH0C,KAAxB,CAA5B;AAMA,UAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAT,EAAnB;;AAEA,QAAI,CAACP,QAAQ,CAACQ,EAAd,EAAkB;AACdb,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,MAAAA,QAAQ,CAACc,IAAI,CAACf,KAAN,CAAR;AACH;;AAED,QAAIQ,QAAQ,CAACQ,EAAb,EAAiB;AACb;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BL,IAAI,CAACC,SAAL,CAAeC,IAAf,CAA7B,EAFa,CAIb;;AAEAX,MAAAA,QAAQ,CAAC;AAACe,QAAAA,IAAI,EAAE,OAAP;AAAgBC,QAAAA,OAAO,EAAEL;AAAzB,OAAD,CAAR;AAEAZ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AAEAJ,MAAAA,OAAO,CAACsB,IAAR,CAAa,GAAb;AACH;AACJ,GA7BD;;AA8BA,SAAO;AAAEhB,IAAAA,KAAF;AAASH,IAAAA,SAAT;AAAoBF,IAAAA;AAApB,GAAP;AACH,CArCM;;GAAMF,Q;UACOD,U,EAGKD,c","sourcesContent":["import { useState } from 'react';\r\nimport { useAuthContext } from './useAuthContext';\r\nimport { useHistory} from 'react-router-dom';\r\n\r\nexport const useLogin = () => {\r\n    const history = useHistory();\r\n    const [error, setError] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(null);\r\n    const { dispatch } = useAuthContext();\r\n\r\n    const login = async (email, password) => {\r\n        setIsLoading(true);\r\n        setError(null);\r\n\r\n        const response = await fetch('/api/user/connexion', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({email, password})\r\n        })\r\n\r\n        const json = await response.json()\r\n\r\n        if (!response.ok) {\r\n            setIsLoading(false)\r\n            setError(json.error)\r\n        }\r\n\r\n        if (response.ok) {\r\n            //save the user to localStorage\r\n            localStorage.setItem('user', JSON.stringify(json))\r\n\r\n            //update the auth context\r\n\r\n            dispatch({type: 'LOGIN', payload: json})\r\n\r\n            setIsLoading(false)\r\n            \r\n            history.push('/')\r\n        }\r\n    }\r\n    return { login, isLoading, error }\r\n}"]},"metadata":{},"sourceType":"module"}